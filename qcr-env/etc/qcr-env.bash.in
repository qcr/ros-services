#!/bin/bash

# --------- QCR Related --------------
export QCR_ROBOT_VERSION="0.1"
# Get current path of this script
export QCR_ROBOT_CONF_PATH="$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )/qcr-env.bash"
# Robot type managed by this device
export QCR_ROBOT_TYPE=
# Sets this machine to be the ROS Primary (master) (true) or a Peripheral ROS machine (slave) (false)
export QCR_IS_PRIMARY=true
# Set the ROS IP of the ROS Primary, required on both primary and peripheral devices
export QCR_ROS_IP_PRIMARY=
# Set the ROS IP of a Peripheral ROS Device, only required on peripheral devices
export QCR_ROS_IP_PERIPHERAL=
# Sets the ROS version (1 or 2). Defaults to 1
export QCR_ROS_VERSION=1

# --------- ROS Related --------------
# Check distribution of ros and update
_os_release="$(lsb_release -r)"
if [[ $_os_release == *"20.04"* ]]; then
    if [[ "QCR_ROS_VERSION" -eq 1 ]]; then
        export QCR_ROS_DISTRO=noetic
    elif [[ "QCR_ROS_VERSION" -eq 2 ]]; then
        export QCR_ROS_DISTRO=foxy
    else
        echo "QCR CONFIG ERROR: Unknown ROS version -> Defaulting to ROS 1 (noetic)"
        export QCR_ROS_DISTRO=noetic
    fi
else
    echo "QCR CONFIG ERROR: Only Supporting Ubuntu 20.04 at this stage -> Defaulting to ROS 1 (noetic)"
    export QCR_ROS_DISTRO=noetic
fi

if [ ! -z $QCR_ROS_IP_PRIMARY ]; then
    export ROS_MASTER_URI=http://${QCR_ROS_IP_PRIMARY}:11311
fi

if [ $QCR_IS_PRIMARY == true ]; then
    if [ ! -z $QCR_ROS_IP_PRIMARY ]; then
        export ROS_HOSTNAME=$QCR_ROS_IP_PRIMARY
        export ROS_IP=$QCR_ROS_IP_PRIMARY
    fi
else
    if [ ! -z $QCR_ROS_IP_PERIPHERAL ]; then
        export ROS_HOSTNAME=$QCR_ROS_IP_PERIPHERAL
        export ROS_IP=$QCR_ROS_IP_PERIPHERAL
    fi
fi

# Sets the default location from which to source ROS packages
# Do not touch this to source a user's catkin workspace
export ROS_WORKSPACE=/opt/ros/$QCR_ROS_DISTRO/setup.bash

# --------- System Related -----------
export NETWORK_CONFIG_DIR=/etc/systemd/network
